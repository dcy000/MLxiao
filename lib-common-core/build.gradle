apply from: rootProject.file('cc-settings.gradle')
//apply from: 'https://raw.githubusercontent.com/luckybilly/CC/master/cc-settings.gradle'
//apply plugin: 'com.android.library'


android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    defaultConfig {
        if (project.ext.runAsApp) {
            applicationId "com.gcml.common.debug"
        }
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner rootProject.ext.android["AndroidJUnitRunner"]

//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [moduleName: project.getName()]
//            }
//        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            buildConfigField "boolean", "RUN_AS_APP", "${project.ext.runAsApp}"
            buildConfigField("String", "SERVER_ADDRESS", rootProject.ext.developUrl)
            buildConfigField("String", "API_SENIVERSE", rootProject.ext.api.seniverse)
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            buildConfigField "boolean", "RUN_AS_APP", "${project.ext.runAsApp}"
            buildConfigField("String", "SERVER_ADDRESS", rootProject.ext.produceUrl)
            buildConfigField("String", "API_SENIVERSE", rootProject.ext.api.seniverse)
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["appcompat-v7"]
    api rootProject.ext.dependencies["recyclerview-v7"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    api rootProject.ext.dependencies["lifecycle-extensions"]
    api rootProject.ext.dependencies["lifecycle-runtime"]

    api rootProject.ext.dependencies["autodispose"]
    api rootProject.ext.dependencies["autodispose-arch"]

    api rootProject.ext.dependencies["rxjava2"]
    api rootProject.ext.dependencies["rxandroid2"]

    implementation rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]

    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofit-url-manager"]
    api rootProject.ext.dependencies["retrofit-converter-gson"]
    api rootProject.ext.dependencies["retrofit-adapter-rxjava2"]

    implementation rootProject.ext.dependencies["rxcache2"]
    implementation rootProject.ext.dependencies["rxcache-jolyglot-gson"]

    implementation rootProject.ext.dependencies["room-runtime"]
    annotationProcessor rootProject.ext.dependencies["room-compiler"]
    implementation rootProject.ext.dependencies["room-rxjava2"]

    api rootProject.ext.dependencies["glide"]
    api rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]

    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    api 'com.thanosfisherman.elvis:elvis:2.0'

    api rootProject.ext.dependencies["multidex"]

    api rootProject.ext.dependencies["timber"]
    implementation rootProject.ext.dependencies["stetho"]
    api rootProject.ext.dependencies["litepal"]
    api rootProject.ext.dependencies["ultra-ptr"]
    implementation rootProject.ext.dependencies["stetho-okhttp3"]
    implementation rootProject.ext.dependencies["bugly-crashreport"]
    implementation rootProject.ext.dependencies["bugly-nativecrashreport"]
    debugImplementation rootProject.ext.dependencies["leakCanary-debug"]
    releaseImplementation rootProject.ext.dependencies["leakCanary-release"]
    debugImplementation rootProject.ext.dependencies["blockCanary-debug"]
    releaseImplementation rootProject.ext.dependencies["blockCanary-release"]
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]

    debugApi 'com.github.whataa:pandora:v1.1.4'
    releaseApi 'com.github.whataa:pandora-no-op:v1.1.0'
}
