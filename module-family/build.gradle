apply from: rootProject.file('cc-settings.gradle')

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        if (project.ext.runAsApp) {
            applicationId "com.gcml.family"
        }
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner rootProject.ext.android["AndroidJUnitRunner"]

        packagingOptions{
            pickFirst 'lib/arm64-v8a/librsjni.so'
            pickFirst 'lib/armeabi-v7a/libRSSupport.so'
            pickFirst 'lib/arm64-v8a/libRSSupport.so'
            pickFirst 'lib/mips/libRSSupport.so'
            pickFirst 'lib/x86/libRSSupport.so'
            pickFirst 'lib/mips/librsjni.so'
            pickFirst 'lib/x86_64/libRSSupport.so'
            pickFirst 'lib/x86/librsjni.so'
            pickFirst 'lib/x86_64/librsjni.so'
            pickFirst 'lib/armeabi-v7a/librsjni.so'
        }

    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            buildConfigField "boolean", "RUN_AS_APP", "${project.ext.runAsApp}"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            multiDexEnabled true
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            buildConfigField "boolean", "RUN_AS_APP", "${project.ext.runAsApp}"
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    if (project.ext.runAsApp) {
        implementation project(":lib-common-app")
    }

    implementation project(":lib-common-business")
    implementation project(":lib-common-core")
    implementation project(':lib-pay-beecloud')

    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]
    implementation rootProject.ext.dependencies["cardview-v7"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]
    implementation rootProject.ext.dependencies["timber"]
    implementation rootProject.ext.dependencies["picasso"]
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:1.1.6'

    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
}
